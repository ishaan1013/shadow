apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: firecracker
handler: firecracker
scheduling:
  nodeSelector:
    firecracker: "true"
  tolerations:
  - key: firecracker.shadow.ai/dedicated
    operator: Equal
    value: "true"
    effect: NoSchedule
  - key: node.kubernetes.io/not-ready
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 300

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: firecracker-vm-config
  namespace: shadow-agents
data:
  vm-config-template.json: |
    {
      "boot-source": {
        "kernel_image_path": "/var/lib/firecracker/kernels/vmlinux",
        "boot_args": "console=ttyS0 reboot=k panic=1 pci=off init=/sbin/init"
      },
      "drives": [
        {
          "drive_id": "rootfs",
          "path_on_host": "/var/lib/firecracker/rootfs/shadow-rootfs.ext4",
          "is_root_device": true,
          "is_read_only": false
        },
        {
          "drive_id": "workspace",
          "path_on_host": "/var/lib/firecracker/workspace/{{TASK_ID}}/workspace.ext4",
          "is_root_device": false,
          "is_read_only": false
        }
      ],
      "machine-config": {
        "vcpu_count": 1,
        "mem_size_mib": 1024,
        "ht_enabled": false,
        "track_dirty_pages": false
      },
      "network-interfaces": [
        {
          "iface_id": "eth0",
          "guest_mac": "AA:FC:00:00:00:01",
          "host_dev_name": "tap{{TASK_ID}}"
        }
      ],
      "vsock": {
        "guest_cid": 3,
        "uds_path": "/var/lib/firecracker/{{TASK_ID}}/firecracker.vsock"
      },
      "logger": {
        "log_path": "/var/lib/firecracker/{{TASK_ID}}/firecracker.log",
        "level": "Info",
        "show_level": true,
        "show_log_origin": true
      },
      "metrics": {
        "metrics_path": "/var/lib/firecracker/{{TASK_ID}}/firecracker.metrics"
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: firecracker-jailer-config
  namespace: shadow-agents
data:
  jailer-config.sh: |
    #!/bin/bash
    
    # Firecracker Jailer Configuration Script
    # This script sets up the jailer environment for secure VM execution
    
    set -euo pipefail
    
    TASK_ID="$1"
    VM_CONFIG_PATH="$2"
    
    # Jailer configuration
    JAILER_UID=1000
    JAILER_GID=1000
    CHROOT_BASE_DIR="/srv/jailer"
    EXEC_FILE="/usr/local/bin/firecracker"
    
    # Create jailer directories
    mkdir -p "$CHROOT_BASE_DIR"
    mkdir -p "/var/lib/firecracker/$TASK_ID"
    
    # Set up jailer command
    JAILER_CMD=(
        "/usr/local/bin/jailer"
        "--id" "$TASK_ID"
        "--exec-file" "$EXEC_FILE"
        "--uid" "$JAILER_UID"
        "--gid" "$JAILER_GID"
        "--chroot-base-dir" "$CHROOT_BASE_DIR"
        "--netns" "/var/run/netns/fc-$TASK_ID"
        "--resource-limit" "no-file=1024"
        "--resource-limit" "fsize=134217728"  # 128MB
        "--"
        "--config-file" "$VM_CONFIG_PATH"
        "--api-sock" "/run/firecracker.socket"
    )
    
    echo "Starting Firecracker VM with jailer: ${JAILER_CMD[*]}"
    exec "${JAILER_CMD[@]}"